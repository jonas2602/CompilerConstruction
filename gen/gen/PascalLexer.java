// Generated from C:/Users/Project_X/gitKraken/CompilerConstruction/src\Pascal.g4 by ANTLR 4.7.2
package gen;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class PascalLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		AND=1, ARRAY=2, BEGIN=3, BOOLEAN=4, CASE=5, CHAR=6, CONST=7, DIV=8, DO=9, 
		DOWNTO=10, ELSE=11, END=12, FILE=13, FOR=14, FUNCTION=15, GOTO=16, IF=17, 
		IN=18, INTEGER=19, LABEL=20, MOD=21, NIL=22, NOT=23, OF=24, OR=25, PACKED=26, 
		PROCEDURE=27, PROGRAM=28, REAL=29, RECORD=30, REPEAT=31, SET=32, THEN=33, 
		TO=34, TYPE=35, UNTIL=36, VAR=37, WHILE=38, WITH=39, PLUS=40, MINUS=41, 
		STAR=42, SLASH=43, ASSIGN=44, COMMA=45, SEMI=46, COLON=47, EQUAL=48, NOT_EQUAL=49, 
		LT=50, LE=51, GE=52, GT=53, LPAREN=54, RPAREN=55, LBRACK=56, LBRACK2=57, 
		RBRACK=58, RBRACK2=59, POINTER=60, AT=61, DOT=62, DOTDOT=63, LCURLY=64, 
		RCURLY=65, UNIT=66, INTERFACE=67, USES=68, STRING=69, IMPLEMENTATION=70, 
		TRUE=71, FALSE=72, WS=73, COMMENT_1=74, COMMENT_2=75, IDENT=76, STRING_LITERAL=77, 
		NUM_INT=78, NUM_REAL=79;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
			"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "AND", "ARRAY", 
			"BEGIN", "BOOLEAN", "CASE", "CHAR", "CONST", "DIV", "DO", "DOWNTO", "ELSE", 
			"END", "FILE", "FOR", "FUNCTION", "GOTO", "IF", "IN", "INTEGER", "LABEL", 
			"MOD", "NIL", "NOT", "OF", "OR", "PACKED", "PROCEDURE", "PROGRAM", "REAL", 
			"RECORD", "REPEAT", "SET", "THEN", "TO", "TYPE", "UNTIL", "VAR", "WHILE", 
			"WITH", "PLUS", "MINUS", "STAR", "SLASH", "ASSIGN", "COMMA", "SEMI", 
			"COLON", "EQUAL", "NOT_EQUAL", "LT", "LE", "GE", "GT", "LPAREN", "RPAREN", 
			"LBRACK", "LBRACK2", "RBRACK", "RBRACK2", "POINTER", "AT", "DOT", "DOTDOT", 
			"LCURLY", "RCURLY", "UNIT", "INTERFACE", "USES", "STRING", "IMPLEMENTATION", 
			"TRUE", "FALSE", "WS", "COMMENT_1", "COMMENT_2", "IDENT", "STRING_LITERAL", 
			"NUM_INT", "NUM_REAL", "EXPONENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, "'+'", "'-'", "'*'", "'/'", "':='", "','", "';'", 
			"':'", "'='", "'<>'", "'<'", "'<='", "'>='", "'>'", "'('", "')'", "'['", 
			"'(.'", "']'", "'.)'", "'^'", "'@'", "'.'", "'..'", "'{'", "'}'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "AND", "ARRAY", "BEGIN", "BOOLEAN", "CASE", "CHAR", "CONST", "DIV", 
			"DO", "DOWNTO", "ELSE", "END", "FILE", "FOR", "FUNCTION", "GOTO", "IF", 
			"IN", "INTEGER", "LABEL", "MOD", "NIL", "NOT", "OF", "OR", "PACKED", 
			"PROCEDURE", "PROGRAM", "REAL", "RECORD", "REPEAT", "SET", "THEN", "TO", 
			"TYPE", "UNTIL", "VAR", "WHILE", "WITH", "PLUS", "MINUS", "STAR", "SLASH", 
			"ASSIGN", "COMMA", "SEMI", "COLON", "EQUAL", "NOT_EQUAL", "LT", "LE", 
			"GE", "GT", "LPAREN", "RPAREN", "LBRACK", "LBRACK2", "RBRACK", "RBRACK2", 
			"POINTER", "AT", "DOT", "DOTDOT", "LCURLY", "RCURLY", "UNIT", "INTERFACE", 
			"USES", "STRING", "IMPLEMENTATION", "TRUE", "FALSE", "WS", "COMMENT_1", 
			"COMMENT_2", "IDENT", "STRING_LITERAL", "NUM_INT", "NUM_REAL"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public PascalLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Pascal.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2Q\u0299\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\4[\t[\4\\\t\\\4]\t]\4^\t^\4_\t_\4"+
		"`\t`\4a\ta\4b\tb\4c\tc\4d\td\4e\te\4f\tf\4g\tg\4h\th\4i\ti\4j\tj\4k\t"+
		"k\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n"+
		"\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21"+
		"\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30"+
		"\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35"+
		"\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3#\3"+
		"#\3#\3#\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3"+
		"(\3(\3(\3(\3(\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3"+
		",\3,\3,\3-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3\60\3\60\3"+
		"\60\3\60\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\64\3"+
		"\64\3\64\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3"+
		"\66\3\66\3\66\3\66\3\66\3\67\3\67\3\67\3\67\3\67\3\67\3\67\3\67\38\38"+
		"\38\38\38\39\39\39\39\39\39\39\3:\3:\3:\3:\3:\3:\3:\3;\3;\3;\3;\3<\3<"+
		"\3<\3<\3<\3=\3=\3=\3>\3>\3>\3>\3>\3?\3?\3?\3?\3?\3?\3@\3@\3@\3@\3A\3A"+
		"\3A\3A\3A\3A\3B\3B\3B\3B\3B\3C\3C\3D\3D\3E\3E\3F\3F\3G\3G\3G\3H\3H\3I"+
		"\3I\3J\3J\3K\3K\3L\3L\3L\3M\3M\3N\3N\3N\3O\3O\3O\3P\3P\3Q\3Q\3R\3R\3S"+
		"\3S\3T\3T\3T\3U\3U\3V\3V\3V\3W\3W\3X\3X\3Y\3Y\3Z\3Z\3Z\3[\3[\3\\\3\\\3"+
		"]\3]\3]\3]\3]\3^\3^\3^\3^\3^\3^\3^\3^\3^\3^\3_\3_\3_\3_\3_\3`\3`\3`\3"+
		"`\3`\3`\3`\3a\3a\3a\3a\3a\3a\3a\3a\3a\3a\3a\3a\3a\3a\3a\3b\3b\3b\3b\3"+
		"b\3c\3c\3c\3c\3c\3c\3d\3d\3d\3d\3e\3e\3e\3e\7e\u0252\ne\fe\16e\u0255\13"+
		"e\3e\3e\3e\3e\3e\3f\3f\7f\u025e\nf\ff\16f\u0261\13f\3f\3f\3f\3f\3g\3g"+
		"\7g\u0269\ng\fg\16g\u026c\13g\3h\3h\3h\3h\7h\u0272\nh\fh\16h\u0275\13"+
		"h\3h\3h\3i\6i\u027a\ni\ri\16i\u027b\3j\6j\u027f\nj\rj\16j\u0280\3j\3j"+
		"\6j\u0285\nj\rj\16j\u0286\3j\5j\u028a\nj\5j\u028c\nj\3j\5j\u028f\nj\3"+
		"k\3k\5k\u0293\nk\3k\6k\u0296\nk\rk\16k\u0297\4\u0253\u025f\2l\3\2\5\2"+
		"\7\2\t\2\13\2\r\2\17\2\21\2\23\2\25\2\27\2\31\2\33\2\35\2\37\2!\2#\2%"+
		"\2\'\2)\2+\2-\2/\2\61\2\63\2\65\2\67\39\4;\5=\6?\7A\bC\tE\nG\13I\fK\r"+
		"M\16O\17Q\20S\21U\22W\23Y\24[\25]\26_\27a\30c\31e\32g\33i\34k\35m\36o"+
		"\37q s!u\"w#y${%}&\177\'\u0081(\u0083)\u0085*\u0087+\u0089,\u008b-\u008d"+
		".\u008f/\u0091\60\u0093\61\u0095\62\u0097\63\u0099\64\u009b\65\u009d\66"+
		"\u009f\67\u00a18\u00a39\u00a5:\u00a7;\u00a9<\u00ab=\u00ad>\u00af?\u00b1"+
		"@\u00b3A\u00b5B\u00b7C\u00b9D\u00bbE\u00bdF\u00bfG\u00c1H\u00c3I\u00c5"+
		"J\u00c7K\u00c9L\u00cbM\u00cdN\u00cfO\u00d1P\u00d3Q\u00d5\2\3\2!\4\2CC"+
		"cc\4\2DDdd\4\2EEee\4\2FFff\4\2GGgg\4\2HHhh\4\2IIii\4\2JJjj\4\2KKkk\4\2"+
		"LLll\4\2MMmm\4\2NNnn\4\2OOoo\4\2PPpp\4\2QQqq\4\2RRrr\4\2SSss\4\2TTtt\4"+
		"\2UUuu\4\2VVvv\4\2WWww\4\2XXxx\4\2YYyy\4\2ZZzz\4\2[[{{\4\2\\\\||\5\2\13"+
		"\f\17\17\"\"\4\2C\\c|\6\2\62;C\\aac|\3\2))\4\2--//\2\u028a\2\67\3\2\2"+
		"\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2"+
		"E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3"+
		"\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2"+
		"\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2"+
		"k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3"+
		"\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2"+
		"\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b"+
		"\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2"+
		"\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2\2\2\u009d"+
		"\3\2\2\2\2\u009f\3\2\2\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2\2\2\u00a5\3\2\2"+
		"\2\2\u00a7\3\2\2\2\2\u00a9\3\2\2\2\2\u00ab\3\2\2\2\2\u00ad\3\2\2\2\2\u00af"+
		"\3\2\2\2\2\u00b1\3\2\2\2\2\u00b3\3\2\2\2\2\u00b5\3\2\2\2\2\u00b7\3\2\2"+
		"\2\2\u00b9\3\2\2\2\2\u00bb\3\2\2\2\2\u00bd\3\2\2\2\2\u00bf\3\2\2\2\2\u00c1"+
		"\3\2\2\2\2\u00c3\3\2\2\2\2\u00c5\3\2\2\2\2\u00c7\3\2\2\2\2\u00c9\3\2\2"+
		"\2\2\u00cb\3\2\2\2\2\u00cd\3\2\2\2\2\u00cf\3\2\2\2\2\u00d1\3\2\2\2\2\u00d3"+
		"\3\2\2\2\3\u00d7\3\2\2\2\5\u00d9\3\2\2\2\7\u00db\3\2\2\2\t\u00dd\3\2\2"+
		"\2\13\u00df\3\2\2\2\r\u00e1\3\2\2\2\17\u00e3\3\2\2\2\21\u00e5\3\2\2\2"+
		"\23\u00e7\3\2\2\2\25\u00e9\3\2\2\2\27\u00eb\3\2\2\2\31\u00ed\3\2\2\2\33"+
		"\u00ef\3\2\2\2\35\u00f1\3\2\2\2\37\u00f3\3\2\2\2!\u00f5\3\2\2\2#\u00f7"+
		"\3\2\2\2%\u00f9\3\2\2\2\'\u00fb\3\2\2\2)\u00fd\3\2\2\2+\u00ff\3\2\2\2"+
		"-\u0101\3\2\2\2/\u0103\3\2\2\2\61\u0105\3\2\2\2\63\u0107\3\2\2\2\65\u0109"+
		"\3\2\2\2\67\u010b\3\2\2\29\u010f\3\2\2\2;\u0115\3\2\2\2=\u011b\3\2\2\2"+
		"?\u0123\3\2\2\2A\u0128\3\2\2\2C\u012d\3\2\2\2E\u0133\3\2\2\2G\u0137\3"+
		"\2\2\2I\u013a\3\2\2\2K\u0141\3\2\2\2M\u0146\3\2\2\2O\u014a\3\2\2\2Q\u014f"+
		"\3\2\2\2S\u0153\3\2\2\2U\u015c\3\2\2\2W\u0161\3\2\2\2Y\u0164\3\2\2\2["+
		"\u0167\3\2\2\2]\u016f\3\2\2\2_\u0175\3\2\2\2a\u0179\3\2\2\2c\u017d\3\2"+
		"\2\2e\u0181\3\2\2\2g\u0184\3\2\2\2i\u0187\3\2\2\2k\u018e\3\2\2\2m\u0198"+
		"\3\2\2\2o\u01a0\3\2\2\2q\u01a5\3\2\2\2s\u01ac\3\2\2\2u\u01b3\3\2\2\2w"+
		"\u01b7\3\2\2\2y\u01bc\3\2\2\2{\u01bf\3\2\2\2}\u01c4\3\2\2\2\177\u01ca"+
		"\3\2\2\2\u0081\u01ce\3\2\2\2\u0083\u01d4\3\2\2\2\u0085\u01d9\3\2\2\2\u0087"+
		"\u01db\3\2\2\2\u0089\u01dd\3\2\2\2\u008b\u01df\3\2\2\2\u008d\u01e1\3\2"+
		"\2\2\u008f\u01e4\3\2\2\2\u0091\u01e6\3\2\2\2\u0093\u01e8\3\2\2\2\u0095"+
		"\u01ea\3\2\2\2\u0097\u01ec\3\2\2\2\u0099\u01ef\3\2\2\2\u009b\u01f1\3\2"+
		"\2\2\u009d\u01f4\3\2\2\2\u009f\u01f7\3\2\2\2\u00a1\u01f9\3\2\2\2\u00a3"+
		"\u01fb\3\2\2\2\u00a5\u01fd\3\2\2\2\u00a7\u01ff\3\2\2\2\u00a9\u0202\3\2"+
		"\2\2\u00ab\u0204\3\2\2\2\u00ad\u0207\3\2\2\2\u00af\u0209\3\2\2\2\u00b1"+
		"\u020b\3\2\2\2\u00b3\u020d\3\2\2\2\u00b5\u0210\3\2\2\2\u00b7\u0212\3\2"+
		"\2\2\u00b9\u0214\3\2\2\2\u00bb\u0219\3\2\2\2\u00bd\u0223\3\2\2\2\u00bf"+
		"\u0228\3\2\2\2\u00c1\u022f\3\2\2\2\u00c3\u023e\3\2\2\2\u00c5\u0243\3\2"+
		"\2\2\u00c7\u0249\3\2\2\2\u00c9\u024d\3\2\2\2\u00cb\u025b\3\2\2\2\u00cd"+
		"\u0266\3\2\2\2\u00cf\u026d\3\2\2\2\u00d1\u0279\3\2\2\2\u00d3\u027e\3\2"+
		"\2\2\u00d5\u0290\3\2\2\2\u00d7\u00d8\t\2\2\2\u00d8\4\3\2\2\2\u00d9\u00da"+
		"\t\3\2\2\u00da\6\3\2\2\2\u00db\u00dc\t\4\2\2\u00dc\b\3\2\2\2\u00dd\u00de"+
		"\t\5\2\2\u00de\n\3\2\2\2\u00df\u00e0\t\6\2\2\u00e0\f\3\2\2\2\u00e1\u00e2"+
		"\t\7\2\2\u00e2\16\3\2\2\2\u00e3\u00e4\t\b\2\2\u00e4\20\3\2\2\2\u00e5\u00e6"+
		"\t\t\2\2\u00e6\22\3\2\2\2\u00e7\u00e8\t\n\2\2\u00e8\24\3\2\2\2\u00e9\u00ea"+
		"\t\13\2\2\u00ea\26\3\2\2\2\u00eb\u00ec\t\f\2\2\u00ec\30\3\2\2\2\u00ed"+
		"\u00ee\t\r\2\2\u00ee\32\3\2\2\2\u00ef\u00f0\t\16\2\2\u00f0\34\3\2\2\2"+
		"\u00f1\u00f2\t\17\2\2\u00f2\36\3\2\2\2\u00f3\u00f4\t\20\2\2\u00f4 \3\2"+
		"\2\2\u00f5\u00f6\t\21\2\2\u00f6\"\3\2\2\2\u00f7\u00f8\t\22\2\2\u00f8$"+
		"\3\2\2\2\u00f9\u00fa\t\23\2\2\u00fa&\3\2\2\2\u00fb\u00fc\t\24\2\2\u00fc"+
		"(\3\2\2\2\u00fd\u00fe\t\25\2\2\u00fe*\3\2\2\2\u00ff\u0100\t\26\2\2\u0100"+
		",\3\2\2\2\u0101\u0102\t\27\2\2\u0102.\3\2\2\2\u0103\u0104\t\30\2\2\u0104"+
		"\60\3\2\2\2\u0105\u0106\t\31\2\2\u0106\62\3\2\2\2\u0107\u0108\t\32\2\2"+
		"\u0108\64\3\2\2\2\u0109\u010a\t\33\2\2\u010a\66\3\2\2\2\u010b\u010c\5"+
		"\3\2\2\u010c\u010d\5\35\17\2\u010d\u010e\5\t\5\2\u010e8\3\2\2\2\u010f"+
		"\u0110\5\3\2\2\u0110\u0111\5%\23\2\u0111\u0112\5%\23\2\u0112\u0113\5\3"+
		"\2\2\u0113\u0114\5\63\32\2\u0114:\3\2\2\2\u0115\u0116\5\5\3\2\u0116\u0117"+
		"\5\13\6\2\u0117\u0118\5\17\b\2\u0118\u0119\5\23\n\2\u0119\u011a\5\35\17"+
		"\2\u011a<\3\2\2\2\u011b\u011c\5\5\3\2\u011c\u011d\5\37\20\2\u011d\u011e"+
		"\5\37\20\2\u011e\u011f\5\31\r\2\u011f\u0120\5\13\6\2\u0120\u0121\5\3\2"+
		"\2\u0121\u0122\5\35\17\2\u0122>\3\2\2\2\u0123\u0124\5\7\4\2\u0124\u0125"+
		"\5\3\2\2\u0125\u0126\5\'\24\2\u0126\u0127\5\13\6\2\u0127@\3\2\2\2\u0128"+
		"\u0129\5\7\4\2\u0129\u012a\5\21\t\2\u012a\u012b\5\3\2\2\u012b\u012c\5"+
		"%\23\2\u012cB\3\2\2\2\u012d\u012e\5\7\4\2\u012e\u012f\5\37\20\2\u012f"+
		"\u0130\5\35\17\2\u0130\u0131\5\'\24\2\u0131\u0132\5)\25\2\u0132D\3\2\2"+
		"\2\u0133\u0134\5\t\5\2\u0134\u0135\5\23\n\2\u0135\u0136\5-\27\2\u0136"+
		"F\3\2\2\2\u0137\u0138\5\t\5\2\u0138\u0139\5\37\20\2\u0139H\3\2\2\2\u013a"+
		"\u013b\5\t\5\2\u013b\u013c\5\37\20\2\u013c\u013d\5/\30\2\u013d\u013e\5"+
		"\35\17\2\u013e\u013f\5)\25\2\u013f\u0140\5\37\20\2\u0140J\3\2\2\2\u0141"+
		"\u0142\5\13\6\2\u0142\u0143\5\31\r\2\u0143\u0144\5\'\24\2\u0144\u0145"+
		"\5\13\6\2\u0145L\3\2\2\2\u0146\u0147\5\13\6\2\u0147\u0148\5\35\17\2\u0148"+
		"\u0149\5\t\5\2\u0149N\3\2\2\2\u014a\u014b\5\r\7\2\u014b\u014c\5\23\n\2"+
		"\u014c\u014d\5\31\r\2\u014d\u014e\5\13\6\2\u014eP\3\2\2\2\u014f\u0150"+
		"\5\r\7\2\u0150\u0151\5\37\20\2\u0151\u0152\5%\23\2\u0152R\3\2\2\2\u0153"+
		"\u0154\5\r\7\2\u0154\u0155\5+\26\2\u0155\u0156\5\35\17\2\u0156\u0157\5"+
		"\7\4\2\u0157\u0158\5)\25\2\u0158\u0159\5\23\n\2\u0159\u015a\5\37\20\2"+
		"\u015a\u015b\5\35\17\2\u015bT\3\2\2\2\u015c\u015d\5\17\b\2\u015d\u015e"+
		"\5\37\20\2\u015e\u015f\5)\25\2\u015f\u0160\5\37\20\2\u0160V\3\2\2\2\u0161"+
		"\u0162\5\23\n\2\u0162\u0163\5\r\7\2\u0163X\3\2\2\2\u0164\u0165\5\23\n"+
		"\2\u0165\u0166\5\35\17\2\u0166Z\3\2\2\2\u0167\u0168\5\23\n\2\u0168\u0169"+
		"\5\35\17\2\u0169\u016a\5)\25\2\u016a\u016b\5\13\6\2\u016b\u016c\5\17\b"+
		"\2\u016c\u016d\5\13\6\2\u016d\u016e\5%\23\2\u016e\\\3\2\2\2\u016f\u0170"+
		"\5\31\r\2\u0170\u0171\5\3\2\2\u0171\u0172\5\5\3\2\u0172\u0173\5\13\6\2"+
		"\u0173\u0174\5\31\r\2\u0174^\3\2\2\2\u0175\u0176\5\33\16\2\u0176\u0177"+
		"\5\37\20\2\u0177\u0178\5\t\5\2\u0178`\3\2\2\2\u0179\u017a\5\35\17\2\u017a"+
		"\u017b\5\23\n\2\u017b\u017c\5\31\r\2\u017cb\3\2\2\2\u017d\u017e\5\35\17"+
		"\2\u017e\u017f\5\37\20\2\u017f\u0180\5)\25\2\u0180d\3\2\2\2\u0181\u0182"+
		"\5\37\20\2\u0182\u0183\5\r\7\2\u0183f\3\2\2\2\u0184\u0185\5\37\20\2\u0185"+
		"\u0186\5%\23\2\u0186h\3\2\2\2\u0187\u0188\5!\21\2\u0188\u0189\5\3\2\2"+
		"\u0189\u018a\5\7\4\2\u018a\u018b\5\27\f\2\u018b\u018c\5\13\6\2\u018c\u018d"+
		"\5\t\5\2\u018dj\3\2\2\2\u018e\u018f\5!\21\2\u018f\u0190\5%\23\2\u0190"+
		"\u0191\5\37\20\2\u0191\u0192\5\7\4\2\u0192\u0193\5\13\6\2\u0193\u0194"+
		"\5\t\5\2\u0194\u0195\5+\26\2\u0195\u0196\5%\23\2\u0196\u0197\5\13\6\2"+
		"\u0197l\3\2\2\2\u0198\u0199\5!\21\2\u0199\u019a\5%\23\2\u019a\u019b\5"+
		"\37\20\2\u019b\u019c\5\17\b\2\u019c\u019d\5%\23\2\u019d\u019e\5\3\2\2"+
		"\u019e\u019f\5\33\16\2\u019fn\3\2\2\2\u01a0\u01a1\5%\23\2\u01a1\u01a2"+
		"\5\13\6\2\u01a2\u01a3\5\3\2\2\u01a3\u01a4\5\31\r\2\u01a4p\3\2\2\2\u01a5"+
		"\u01a6\5%\23\2\u01a6\u01a7\5\13\6\2\u01a7\u01a8\5\7\4\2\u01a8\u01a9\5"+
		"\37\20\2\u01a9\u01aa\5%\23\2\u01aa\u01ab\5\t\5\2\u01abr\3\2\2\2\u01ac"+
		"\u01ad\5%\23\2\u01ad\u01ae\5\13\6\2\u01ae\u01af\5!\21\2\u01af\u01b0\5"+
		"\13\6\2\u01b0\u01b1\5\3\2\2\u01b1\u01b2\5)\25\2\u01b2t\3\2\2\2\u01b3\u01b4"+
		"\5\'\24\2\u01b4\u01b5\5\13\6\2\u01b5\u01b6\5)\25\2\u01b6v\3\2\2\2\u01b7"+
		"\u01b8\5)\25\2\u01b8\u01b9\5\21\t\2\u01b9\u01ba\5\13\6\2\u01ba\u01bb\5"+
		"\35\17\2\u01bbx\3\2\2\2\u01bc\u01bd\5)\25\2\u01bd\u01be\5\37\20\2\u01be"+
		"z\3\2\2\2\u01bf\u01c0\5)\25\2\u01c0\u01c1\5\63\32\2\u01c1\u01c2\5!\21"+
		"\2\u01c2\u01c3\5\13\6\2\u01c3|\3\2\2\2\u01c4\u01c5\5+\26\2\u01c5\u01c6"+
		"\5\35\17\2\u01c6\u01c7\5)\25\2\u01c7\u01c8\5\23\n\2\u01c8\u01c9\5\31\r"+
		"\2\u01c9~\3\2\2\2\u01ca\u01cb\5-\27\2\u01cb\u01cc\5\3\2\2\u01cc\u01cd"+
		"\5%\23\2\u01cd\u0080\3\2\2\2\u01ce\u01cf\5/\30\2\u01cf\u01d0\5\21\t\2"+
		"\u01d0\u01d1\5\23\n\2\u01d1\u01d2\5\31\r\2\u01d2\u01d3\5\13\6\2\u01d3"+
		"\u0082\3\2\2\2\u01d4\u01d5\5/\30\2\u01d5\u01d6\5\23\n\2\u01d6\u01d7\5"+
		")\25\2\u01d7\u01d8\5\21\t\2\u01d8\u0084\3\2\2\2\u01d9\u01da\7-\2\2\u01da"+
		"\u0086\3\2\2\2\u01db\u01dc\7/\2\2\u01dc\u0088\3\2\2\2\u01dd\u01de\7,\2"+
		"\2\u01de\u008a\3\2\2\2\u01df\u01e0\7\61\2\2\u01e0\u008c\3\2\2\2\u01e1"+
		"\u01e2\7<\2\2\u01e2\u01e3\7?\2\2\u01e3\u008e\3\2\2\2\u01e4\u01e5\7.\2"+
		"\2\u01e5\u0090\3\2\2\2\u01e6\u01e7\7=\2\2\u01e7\u0092\3\2\2\2\u01e8\u01e9"+
		"\7<\2\2\u01e9\u0094\3\2\2\2\u01ea\u01eb\7?\2\2\u01eb\u0096\3\2\2\2\u01ec"+
		"\u01ed\7>\2\2\u01ed\u01ee\7@\2\2\u01ee\u0098\3\2\2\2\u01ef\u01f0\7>\2"+
		"\2\u01f0\u009a\3\2\2\2\u01f1\u01f2\7>\2\2\u01f2\u01f3\7?\2\2\u01f3\u009c"+
		"\3\2\2\2\u01f4\u01f5\7@\2\2\u01f5\u01f6\7?\2\2\u01f6\u009e\3\2\2\2\u01f7"+
		"\u01f8\7@\2\2\u01f8\u00a0\3\2\2\2\u01f9\u01fa\7*\2\2\u01fa\u00a2\3\2\2"+
		"\2\u01fb\u01fc\7+\2\2\u01fc\u00a4\3\2\2\2\u01fd\u01fe\7]\2\2\u01fe\u00a6"+
		"\3\2\2\2\u01ff\u0200\7*\2\2\u0200\u0201\7\60\2\2\u0201\u00a8\3\2\2\2\u0202"+
		"\u0203\7_\2\2\u0203\u00aa\3\2\2\2\u0204\u0205\7\60\2\2\u0205\u0206\7+"+
		"\2\2\u0206\u00ac\3\2\2\2\u0207\u0208\7`\2\2\u0208\u00ae\3\2\2\2\u0209"+
		"\u020a\7B\2\2\u020a\u00b0\3\2\2\2\u020b\u020c\7\60\2\2\u020c\u00b2\3\2"+
		"\2\2\u020d\u020e\7\60\2\2\u020e\u020f\7\60\2\2\u020f\u00b4\3\2\2\2\u0210"+
		"\u0211\7}\2\2\u0211\u00b6\3\2\2\2\u0212\u0213\7\177\2\2\u0213\u00b8\3"+
		"\2\2\2\u0214\u0215\5+\26\2\u0215\u0216\5\35\17\2\u0216\u0217\5\23\n\2"+
		"\u0217\u0218\5)\25\2\u0218\u00ba\3\2\2\2\u0219\u021a\5\23\n\2\u021a\u021b"+
		"\5\35\17\2\u021b\u021c\5)\25\2\u021c\u021d\5\13\6\2\u021d\u021e\5%\23"+
		"\2\u021e\u021f\5\r\7\2\u021f\u0220\5\3\2\2\u0220\u0221\5\7\4\2\u0221\u0222"+
		"\5\13\6\2\u0222\u00bc\3\2\2\2\u0223\u0224\5+\26\2\u0224\u0225\5\'\24\2"+
		"\u0225\u0226\5\13\6\2\u0226\u0227\5\'\24\2\u0227\u00be\3\2\2\2\u0228\u0229"+
		"\5\'\24\2\u0229\u022a\5)\25\2\u022a\u022b\5%\23\2\u022b\u022c\5\23\n\2"+
		"\u022c\u022d\5\35\17\2\u022d\u022e\5\17\b\2\u022e\u00c0\3\2\2\2\u022f"+
		"\u0230\5\23\n\2\u0230\u0231\5\33\16\2\u0231\u0232\5!\21\2\u0232\u0233"+
		"\5\31\r\2\u0233\u0234\5\13\6\2\u0234\u0235\5\33\16\2\u0235\u0236\5\13"+
		"\6\2\u0236\u0237\5\35\17\2\u0237\u0238\5)\25\2\u0238\u0239\5\3\2\2\u0239"+
		"\u023a\5)\25\2\u023a\u023b\5\23\n\2\u023b\u023c\5\37\20\2\u023c\u023d"+
		"\5\35\17\2\u023d\u00c2\3\2\2\2\u023e\u023f\5)\25\2\u023f\u0240\5%\23\2"+
		"\u0240\u0241\5+\26\2\u0241\u0242\5\13\6\2\u0242\u00c4\3\2\2\2\u0243\u0244"+
		"\5\r\7\2\u0244\u0245\5\3\2\2\u0245\u0246\5\31\r\2\u0246\u0247\5\'\24\2"+
		"\u0247\u0248\5\13\6\2\u0248\u00c6\3\2\2\2\u0249\u024a\t\34\2\2\u024a\u024b"+
		"\3\2\2\2\u024b\u024c\bd\2\2\u024c\u00c8\3\2\2\2\u024d\u024e\7*\2\2\u024e"+
		"\u024f\7,\2\2\u024f\u0253\3\2\2\2\u0250\u0252\13\2\2\2\u0251\u0250\3\2"+
		"\2\2\u0252\u0255\3\2\2\2\u0253\u0254\3\2\2\2\u0253\u0251\3\2\2\2\u0254"+
		"\u0256\3\2\2\2\u0255\u0253\3\2\2\2\u0256\u0257\7,\2\2\u0257\u0258\7+\2"+
		"\2\u0258\u0259\3\2\2\2\u0259\u025a\be\2\2\u025a\u00ca\3\2\2\2\u025b\u025f"+
		"\7}\2\2\u025c\u025e\13\2\2\2\u025d\u025c\3\2\2\2\u025e\u0261\3\2\2\2\u025f"+
		"\u0260\3\2\2\2\u025f\u025d\3\2\2\2\u0260\u0262\3\2\2\2\u0261\u025f\3\2"+
		"\2\2\u0262\u0263\7\177\2\2\u0263\u0264\3\2\2\2\u0264\u0265\bf\2\2\u0265"+
		"\u00cc\3\2\2\2\u0266\u026a\t\35\2\2\u0267\u0269\t\36\2\2\u0268\u0267\3"+
		"\2\2\2\u0269\u026c\3\2\2\2\u026a\u0268\3\2\2\2\u026a\u026b\3\2\2\2\u026b"+
		"\u00ce\3\2\2\2\u026c\u026a\3\2\2\2\u026d\u0273\7)\2\2\u026e\u026f\7)\2"+
		"\2\u026f\u0272\7)\2\2\u0270\u0272\n\37\2\2\u0271\u026e\3\2\2\2\u0271\u0270"+
		"\3\2\2\2\u0272\u0275\3\2\2\2\u0273\u0271\3\2\2\2\u0273\u0274\3\2\2\2\u0274"+
		"\u0276\3\2\2\2\u0275\u0273\3\2\2\2\u0276\u0277\7)\2\2\u0277\u00d0\3\2"+
		"\2\2\u0278\u027a\4\62;\2\u0279\u0278\3\2\2\2\u027a\u027b\3\2\2\2\u027b"+
		"\u0279\3\2\2\2\u027b\u027c\3\2\2\2\u027c\u00d2\3\2\2\2\u027d\u027f\4\62"+
		";\2\u027e\u027d\3\2\2\2\u027f\u0280\3\2\2\2\u0280\u027e\3\2\2\2\u0280"+
		"\u0281\3\2\2\2\u0281\u028e\3\2\2\2\u0282\u0284\7\60\2\2\u0283\u0285\4"+
		"\62;\2\u0284\u0283\3\2\2\2\u0285\u0286\3\2\2\2\u0286\u0284\3\2\2\2\u0286"+
		"\u0287\3\2\2\2\u0287\u0289\3\2\2\2\u0288\u028a\5\u00d5k\2\u0289\u0288"+
		"\3\2\2\2\u0289\u028a\3\2\2\2\u028a\u028c\3\2\2\2\u028b\u0282\3\2\2\2\u028b"+
		"\u028c\3\2\2\2\u028c\u028f\3\2\2\2\u028d\u028f\5\u00d5k\2\u028e\u028b"+
		"\3\2\2\2\u028e\u028d\3\2\2\2\u028f\u00d4\3\2\2\2\u0290\u0292\7g\2\2\u0291"+
		"\u0293\t \2\2\u0292\u0291\3\2\2\2\u0292\u0293\3\2\2\2\u0293\u0295\3\2"+
		"\2\2\u0294\u0296\4\62;\2\u0295\u0294\3\2\2\2\u0296\u0297\3\2\2\2\u0297"+
		"\u0295\3\2\2\2\u0297\u0298\3\2\2\2\u0298\u00d6\3\2\2\2\20\2\u0253\u025f"+
		"\u026a\u0271\u0273\u027b\u0280\u0286\u0289\u028b\u028e\u0292\u0297\3\b"+
		"\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}